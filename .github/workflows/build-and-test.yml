# Numele pipeline-ului, va apărea în tab-ul "Actions" de pe GitHub
name: Angular CI - Build and Test

# Când să pornească acest pipeline?
# Declanșează la orice 'push' în branch-ul 'main'.
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# Lista de "job-uri" (sarcini) care vor fi executate.
# Avem un singur job, numit 'build-and-test'.
jobs:
  build-and-test:
    # Pe ce tip de mașină virtuală să ruleze?
    # Folosim o mașină virtuală standard cu Ubuntu, oferită de GitHub.
    runs-on: ubuntu-latest

    # Lista de pași care vor fi executați în ordine.
    steps:
      # Pasul 1: Descarcă codul sursă din repository
      # Folosește o acțiune predefinită de GitHub pentru a face 'git checkout'.
      - name: Checkout code
        uses: actions/checkout@v4

      # Pasul 2: Instalează Node.js
      # Folosește o acțiune predefinită pentru a instala versiunea 20 de Node.js.
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # Pasul 3: Instalează dependențele
      # Rulează 'npm ci' care este o versiune mai rapidă și mai sigură
      # a lui 'npm install', special pentru pipeline-uri.
      - name: Install dependencies
        run: npm ci

      # Pasul 4: Construiește aplicația
      # Rulează comanda de build pentru a verifica dacă există erori de compilare.
      # '-- --no-watch --no-progress' sunt flag-uri pentru a rula curat în CI.
      - name: Build application
        run: npm run build -- --no-watch --no-progress

      # Pasul 5: Rulează testele
      # Rulează testele unitare pentru a verifica dacă logica funcționează.
      # '-- --no-watch --browsers=ChromeHeadless' rulează testele o singură dată
      # într-un browser fără interfață grafică.
      - name: Run unit tests
        run: npm run test -- --no-watch --browsers=ChromeHeadless
