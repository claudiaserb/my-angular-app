# Numele pipeline-ului, acum acoperă tot procesul
name: Angular CI/CD Pipeline

# Declanșează la orice 'push' în branch-ul 'main'
on:
  push:
    branches: [ "main" ]

jobs:
  # Job-ul a fost redenumit pentru a reflecta noul său rol
  build-push-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # =======================================================
      # Partea de CI (Integrare Continuă) - O ai deja
      # =======================================================
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build -- --no-watch --no-progress

      - name: Run unit tests
        run: npm run test -- --no-watch --browsers=ChromeHeadless

      # =======================================================
      # Partea de CD (Implementare Continuă) - Pașii Noi
      # =======================================================

      # Pasul 6: Autentificare pe Docker Hub
      # Folosește o acțiune predefinită pentru a se loga.
      # Citește secretele pe care le-ai configurat în setările repository-ului.
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Pasul 7: Construiește și Publică imaginea Docker
      # Folosește o acțiune care combină 'docker build' și 'docker push'.
      # 'github.sha' este un identificator unic pentru fiecare commit,
      # pe care îl folosim ca etichetă (tag) pentru imagine.
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/my-angular-app:${{ github.sha }}

      # =======================================================
      # Următorul Pas (Avansat) - Deploy în Kubernetes
      # =======================================================
      # - name: Deploy to Kubernetes
      #   run: |
      #     # Aici ar veni pașii pentru a te conecta la clusterul K8s
      #     # și a rula 'kubectl set image ...' sau 'terraform apply'.
      #     # Acest pas este mai complex și necesită gestionarea
      #     # credențialelor Kubernetes ca secrete.
